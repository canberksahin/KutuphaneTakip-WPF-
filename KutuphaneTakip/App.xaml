<Application x:Class="KutuphaneTakip.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
             xmlns:local="clr-namespace:KutuphaneTakip"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <!--Mini Butonlar-->
        <Style x:Key="miniButonlar" TargetType="Button">

            <Setter Property="Foreground" Value="#ff787878" />
            <Setter Property="Width" Value="35" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="0" />

            <Setter Property="Template" >
                <Setter.Value>

                    <ControlTemplate TargetType="Button">

                        <Border Name="border"
                                BorderThickness="0"
                                BorderBrush="#ff87878f"
                                Background="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="#ff0f2580" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Menü Butonlar-->
        <Style x:Key="menuButonlar" TargetType="ToggleButton">

            <Setter Property="Foreground" Value="#ff787878" />
            <Setter Property="Margin" Value="0,0,0,1" />

            <Setter Property="Template" >
                <Setter.Value>

                    <ControlTemplate TargetType="ToggleButton">

                        <Border Name="border"
                                BorderThickness="5,0,0,0"
                                BorderBrush="#ff87878f"
                                Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2b5493" />
                                <Setter TargetName="border" Property="Background" Value="#2b5493" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="#2b5493" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--uc butonlar-->
        <Style x:Key="userKontrolKitapEkleButton" TargetType="Button">

            <Setter Property="Foreground" Value="#FF19499C" />
            <Setter Property="Margin" Value="0,0,0,1" />
            <Setter Property="FontSize" Value="9" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="0,0,15,0" />
            <Setter Property="Template" >
                <Setter.Value>

                    <ControlTemplate TargetType="Button">

                        <Border Name="border"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FF19499C" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF19499C" />
                                <Setter TargetName="border" Property="Background" Value="#4C112E8F" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1" />
                                <Setter Property="Foreground" Value="#FF19499C" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Textboxlar-->
        <Style x:Key="MouseOverImageChange_Textbox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="BorderBrush" Value="#FF032D6C" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEFF4FD" />
                    <Setter Property="BorderBrush" Value="#FF2F5DAC" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#region ComboBox style -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#134187"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#134187" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="0,0,0,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--Daire Butonlar-->
        <Style x:Key="DaireButon" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="41" Height="41" Fill="#3e75c7" />
                            <Label x:Name="ButondaireLabel" Content="+" Foreground="White" FontSize="14" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter TargetName="Butondaire" Property="Width" Value="45" />
                                <Setter TargetName="Butondaire" Property="Height" Value="45" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#73a5f1" />
                                <Setter TargetName="ButondaireLabel" Property="FontSize" Value="9" />
                                <Setter TargetName="ButondaireLabel" Property="Content" Value="Foto&#xa; Ekle" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Daire Buton İptal-->
        <Style x:Key="DaireButonIptal" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="55" Height="55" Fill="#ff134187" Stroke="White" />
                            <Image Source="/images/icon/close.png" Width="35" Height="auto" ToolTip="İptal Et!"  />

                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter TargetName="Butondaire" Property="Width" Value="65" />
                                <Setter TargetName="Butondaire" Property="Height" Value="65" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#ff530707" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Memnuniyet Buton 1-->
        <Style x:Key="MemnuniyetButon1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0,3,0,0">
                            <Image Width="100" Height="auto" gif:AnimationBehavior.SourceUri="Images/icon/11.gif" gif:AnimationBehavior.RepeatBehavior="9x" Margin="0,10,0,0" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Memnuniyet Buton 2-->
        <Style x:Key="MemnuniyetButon2" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0,3,0,0">
                            <Image Width="120" Height="auto" gif:AnimationBehavior.SourceUri="Images/icon/22.gif" gif:AnimationBehavior.RepeatBehavior="10x"/>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Memnuniyet Buton 3-->
        <Style x:Key="MemnuniyetButon3" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0,3,0,0">
                            <Image Width="120" Height="auto" gif:AnimationBehavior.SourceUri="Images/icon/33.gif" gif:AnimationBehavior.RepeatBehavior="20x" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Memnuniyet Buton 4-->
        <Style x:Key="MemnuniyetButon4" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Width="120" Height="auto" gif:AnimationBehavior.SourceUri="Images/icon/44.gif" gif:AnimationBehavior.RepeatBehavior="10x" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Evaluation-->
        <Style x:Key="Evaluation" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="70" Height="70" Fill="#ff134187" Stroke="White" />
                            <Image Source="/images/icon/sm.png" Width="70" Height="auto"  />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter TargetName="Butondaire" Property="Fill" Value="#ff530707" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Daire buton bilgi-->
        <Style x:Key="DaireButonBilgi" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="55" Height="55" Fill="#ff134187" Stroke="White" />
                            <Image Source="images/icon/telephone.png" Width="35" Height="auto" ToolTip="Bilgi Al!" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter TargetName="Butondaire" Property="Width" Value="65" />
                                <Setter TargetName="Butondaire" Property="Height" Value="65" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#ff530707" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Dönme Efekti-->
        <Style x:Key="Don" TargetType="Ellipse">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Ellipse.Loaded">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!--Blink efekti-->
        <!--<Style x:Key="yanson" TargetType="Label">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Label.Loaded">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Opacity" RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />
                            <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)" From="350"  To="600" Duration="0:0:15" RepeatBehavior="Forever" AutoReverse="true" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>-->

        <!--Hamburger butonlar-->
        <Style x:Key="hamburgerButonlar" TargetType="Image">
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Width" Value="20" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Width" Value="24" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Satisfaction buton-->
        <Style x:Key="Satisfaction" TargetType="Image">
            <Setter Property="Width" Value="71" />
            <Setter Property="Opacity" Value="0.9" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Width" Value="80" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--DataGrid style-->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}" />
            <Setter Property="CellStyle" Value="{DynamicResource ColumnRowStyle}" />
        </Style>


        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="37" />
            <Setter Property="Background" Value="#ff134787" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Padding" Value="5,5,5,5" />
            <Setter Property="BorderBrush" Value="#ff134787" />
            <Setter Property="BorderThickness" Value="4,0,0,0" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="ToolTip" Value="Tıkla ve Grupla"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColumnRowStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="4,0,0,0" />
            <Setter Property="BorderBrush" Value="#eeeeee" />
            <Setter Property="Padding" Value="5,5,5,5" />
            <Setter Property="Foreground" Value="#ff042263" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="12" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="#3168bc" />
                    <Setter Property="BorderBrush" Value="#ff042263" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        

    </Application.Resources>


</Application>
